name: 'inventoria'
services:
  rustfs:
    image: rustfs/rustfs:latest
    container_name: s3
    ports:
      - '9000:9000'
    volumes:
      - ./rustfs/data:/data
    environment:
      - RUSTFS_ACCESS_KEY=${RUSTFS_ACCESS_KEY}
      - RUSTFS_SECRET_KEY=${RUSTFS_SECRET_KEY}
    restart: unless-stopped

  rustfs-init:
    image: minio/mc
    container_name: s3-init
    restart: no
    depends_on:
      - rustfs
    entrypoint: >
      /bin/sh -c "
        sleep 5 && \
        mc alias set rustfs http://s3:9000 ${RUSTFS_ACCESS_KEY} ${RUSTFS_SECRET_KEY} && \
        mc mb -p rustfs/inventoria && \
        mc anonymous set download rustfs/inventoria && \
        echo '✅ Bucket created: inventoria (read-only public)' || echo '⚠️ Bucket may already exist'
      "

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - '27017:27017'
    volumes:
      - ./mongo/data:/data/db
    restart: unless-stopped
    command: ['mongod', '--replSet', 'rs0', '--bind_ip_all']

  mongo-init:
    image: mongo
    container_name: mongo-init
    depends_on:
      - mongo
    restart: 'no'
    entrypoint: >
      bash -c "
        sleep 5 && \
        mongosh --host mongo --eval '
          rs.initiate({
            _id: \"rs0\",
            members: [{ _id: 0, host: \"mongo:27017\" }]
          })
        ' || echo '✅ Replica set may already be initialized.'
      "

  backend:
    build: ./backend
    container_name: inventoria-backend
    ports:
      - '3001:3000'
    depends_on:
      - mongo
    env_file:
      - ./backend/.env
      - rustfs
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: inventoria-frontend
    ports:
      - '3000:80'
    depends_on:
      - backend
    restart: unless-stopped
